# vim: set sw=4 ts=4 sts=4 et tw=78 foldmarker={{,}} foldmethod=marker:
# @author: Haoming Wang <haoming.exe@gmail.com>

# Basic functions {{

BOLD="$(tput bold 2>/dev/null || echo '\033[1m')"
GREY="$(tput setaf 0 2>/dev/null || echo '\033[90m')"
UNDERLINE="$(tput smul 2>/dev/null || echo '\033[4m')"
RED="$(tput setaf 1 2>/dev/null || echo '\033[31m')"
GREEN="$(tput setaf 2 2>/dev/null || echo '\033[32m')"
YELLOW="$(tput setaf 3 2>/dev/null || echo '\033[33m')"
BLUE="$(tput setaf 4 2>/dev/null || echo '\033[34m')"
MAGENTA="$(tput setaf 5 2>/dev/null || echo '\033[35m')"
CYAN="$(tput setaf 6 2>/dev/null || echo '\033[36m')"
NO_COLOR="$(tput sgr0 2>/dev/null || echo '\033[0m')"

info() {
  printf "${BOLD}${GREY}>${NO_COLOR} $@\n"
}

warning() {
  printf "${YELLOW}! $@${NO_COLOR}\n"
}

error() {
  printf "${RED}✘ $@${NO_COLOR}\n" >&2
}

success() {
  printf "${GREEN}✓${NO_COLOR} $@\n"
}

is_linux() {
  [[ $(uname) == "Linux" ]]
}

is_macos() {
  [[ $(uname) == "Darwin" ]]
}

program_exists() {
  which "$1" &> /dev/null
}

lnif() {
  if [[ -e "$1" ]]; then
    ln -sfn "$1" "$2"
  fi
}

cpif() {
  if [[ -e "$1" ]]; then
    cp -r "$1" "$2"
  fi
}

parse() {
  local data="$1"
  [[ $# -eq 0 ]] && read data
  echo $data | rev | cut -d'/' -f1 | rev
}

confirm() {
  printf "$1 (y/N) "
  read
  case $REPLY in
    [yY][eE][sS]|[yY]) return 0 ;;
    *) return 1 ;;
  esac
}

reverse() {
  local args=$@
  [[ $# -eq 0 ]] && read args
  echo $args | tr ' ' '\n' | tac | tr '\n' ' '; echo
}

mvext() {
  # e.g. mvext .txt .in
  for file in *$1; do
    mv $file $(basename $file $1)$2
  done
}

# }}
