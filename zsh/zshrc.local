program_exists() {
    # fail on non-zero return value
    which $1 &> /dev/null && return 0 || return 1
}
program_exists vim && alias vi=vim
program_exists nvim && alias vim=nvim

# Create a new directory and enter it
mk() {
    mkdir -p "$@" && cd "$_";
}

cdd() { cd ~/Documents/code/$1 }

# pip commands
alias pipls='pip freeze | grep -v certifi'

pipcl() {
    local pypath=`which python`
    if [[ $pypath == */envs/* ]]; then
        pipls | xargs pip uninstall -y
    fi
}

# miniconda
alias u='source activate'
alias uu='conda deactivate'
alias uls='conda env list'
alias ucl='find $HOME/miniconda3 -type f,l -not -path "$HOME/miniconda3/pkgs*" -regex ".*bin/wish[0-9\.]*$" -ls -delete'

uc() {
    conda create -n $1 python=${2:=3.6}
    ucl
    u $1
}

urm() {
    conda env remove -n $1
}

# [macOS] Recursively delete `.DS_Store` files
alias cleands="find . -type f -name '*.DS_Store' -ls -delete"
alias cleanvim="rm -rf ~/.vim* ~/.config/nvim"

# key bindings
bindkey '^ ' autosuggest-accept

safe_source() { [[ -s $1 ]] && source $1 || return 0 }

upd() {
    local pypath=$(which python)
    local env_name=''
    if $(grep -q 'envs' $pypath); then
        env_name=`echo $pypath | rev | cut -d'/' -f3 | rev`
    fi
    if [[ -n $env_name ]]; then
        echo "deactivating python virtual env"
        uu
    fi
    echo "updating zsh config"
    safe_source ~/.zshrc.local
    if [[ -n $env_name ]]; then
        echo "restoring python virtual env"
        u $env_name
    fi
}

safe_export_path() { [[ -d $1 ]] && export PATH=$1:$PATH || return 0 }

# added by Miniconda3 installer
safe_export_path $HOME/miniconda3/bin

export JAVA_HOME=/usr/local/jdk1.8.0_221
safe_export_path $JAVA_HOME/bin

export GOROOT=/usr/local/go
safe_export_path $GOROOT/bin

safe_use_cuda() {
    if [[ -d "$1/lib64" ]]; then
        export CUDA_HOME=$1
        export LD_LIBRARY_PATH=${CUDA_HOME}/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
        safe_export_path $CUDA_HOME/bin
    fi
}
safe_use_cuda "/usr/local/cuda"

# path deduplication
program_exists awk && {
    LD_LIBRARY_PATH=$(echo -n "$LD_LIBRARY_PATH" | awk -v RS=: -v ORS=: '!a[$1]++' | head -c-1)
    PATH=$(echo -n "$PATH" | awk -v RS=: -v ORS=: '!a[$1]++' | head -c-1)
}
