program_exists() {
    # fail on non-zero return value
    which $1 &> /dev/null && return 0 || return 1
}
program_exists vim && alias vi=vim
program_exists nvim && alias vim=nvim

# Create a new directory and enter it
mk() {
    mkdir -p "$@" && cd "$_";
}

cdd() { cd ~/Documents/code/$1 }

# pip commands
alias pipls='pip freeze | grep -v certifi'

pipcl() {
    local pypath=`which python`
    if [[ $pypath == */envs/* ]]; then
        pipls | xargs pip uninstall -y
    fi
}

# miniconda
alias u='source activate'
alias uu='conda deactivate'
alias uls='conda env list'
alias ucl="find $HOME/miniconda3 -type f,l -not -path '$HOME/miniconda3/pkgs*' -name 'wish*' -ls -delete"

uc() {
    conda create -n $1 python=${2:=3.6}
    ucl
    u $1
}

urm() {
    conda env remove -n $1
}

# [macOS] Recursively delete `.DS_Store` files
alias mcl="find . -type f -name '*.DS_Store' -ls -delete"

# key bindings
bindkey '^ ' autosuggest-accept

safe_export_path() { [[ -d $1 ]] && export PATH=$1:$PATH || return 0 }

# added by Miniconda3 installer
safe_export_path $HOME/miniconda3/bin

export JAVA_HOME=/usr/local/jdk1.8.0_221
safe_export_path $JAVA_HOME/bin

export GOROOT=/usr/local/go
safe_export_path $GOROOT/bin

export CUDA_HOME=/usr/local/cuda
export LD_LIBRARY_PATH=${CUDA_HOME}/lib64
safe_export_path $CUDA_HOME/bin
